<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-4.2.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd" default-autowire="byName">  
                                        <!-- default-autowire="byName"，约定优于配置，约定优于配置 -->  
      
    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->  
    <mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/components/**" location="/components/"/>   
    <mvc:resources mapping="/js/**" location="/js/"/>  
    <mvc:resources mapping="/css/**" location="/css/"/>  
    <mvc:resources mapping="/html/**" location="/html/"/>
    <mvc:resources mapping="/pages/**" location="/pages/"/> 
  
<!--   
    ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，添加拦截器，类级别的处理器映射  -->
     
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">  
        <!--<property name="interceptors">  
            <list>  
                <bean class="com.fsj.spring.util.MyHandlerInterceptor"/>  
            </list>  
        </property> -->  
    </bean>
    
  <!--    
    ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，  
    配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射  -->
      
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    	 
        <property name="cacheSeconds" value="0" />  
        <!--<property name="webBindingInitializer">  
            <bean class="com.fsj.spring.util.MyWebBinding" />  
        </property>-->
        <property name="messageConverters">  
            <list>
            	<ref bean="jsonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    
    <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  	 
	    <property name="supportedMediaTypes">	    	
	        <list>
	        	<value>text/html;charset=UTF-8</value>
	        	<value>application/json;charset=UTF-8</value>
	        </list>  
	    </property>  
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	  <property name="messageConverters">
	   <list >
	   	<!--先进行string转换-->
	   	<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			<constructor-arg>
				<value>UTF-8</value> 
			</constructor-arg>
	   	</bean> 
	    <ref bean="jsonHttpMessageConverter" />
	   </list>
	  </property>
	</bean>

	
<!--  
 <mvc:annotation-driven>
 	<mvc:message-converters register-defaults="true">
 		<ref bean="jsonHttpMessageConverter" />
 	</mvc:message-converters>
 </mvc:annotation-driven>-->
      
    <!--   
    ③：对模型视图名称的解析，即在模型视图名称添加前后缀  
    InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了    
      
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!--  <property name="prefix" value="/WEB-INF/view/"></property>-->  
        <property name="suffix" value=".jsp"></property>  
    </bean>
    --> 
        
</beans>   